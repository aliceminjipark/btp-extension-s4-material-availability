import 'reflect-metadata';
import type { SyncRule, PageLayoutInformation, ValidityInformation, SyncRuleProvider } from '@sap/ux-specification-types';
export declare const reflectMetadataKey: unique symbol;
export declare const syncRule: (propSpec: SyncRule) => any;
export declare function getReflectMetadata(target: object, propertyName: string): SyncRule | undefined;
/**
 * Return the sync rule a given class has been decorated with.
 *
 * @param cls - The constructor of the class that provides the sync rule
 * @returns the sync rule (if it exists)
 */
export declare function getReflectTypeMetadata(cls: SyncRuleProvider): SyncRule | undefined;
export declare const pageLayoutInformation: (pageInfo: PageLayoutInformation) => (constructor: Function) => void;
export declare const childId: (id: string) => any;
export declare const getChildId: (target: any, propertyName: string) => string;
export declare const getPageLayoutInformation: (target: any) => PageLayoutInformation;
export declare const descriptionUrlMetadataKey: unique symbol;
export declare const descriptionSrcURL: (id: string) => any;
export declare const getDescriptionSrcURL: (target: any, propertyName: string) => string;
export declare const validityMetadataKey: unique symbol;
export declare const validity: (propSpec: ValidityInformation) => any;
export declare function getTextForDeprecated(key: string, validityInformation?: ValidityInformation): string;
//# sourceMappingURL=decorators.d.ts.map